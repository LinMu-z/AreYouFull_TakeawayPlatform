Index: common/libs/Helper.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/libs/Helper.py b/common/libs/Helper.py
new file mode 100644
--- /dev/null	
+++ b/common/libs/Helper.py	
@@ -0,0 +1,126 @@
+# -*- coding: utf-8 -*-
+from flask import g,render_template
+import datetime
+'''
+自定义分页类
+'''
+def iPagination( params ):
+    import math
+
+    ret = {
+        "is_prev":1,
+        "is_next":1,
+        "from" :0 ,
+        "end":0,
+        "current":0,
+        "total_pages":0,
+        "page_size" : 0,
+        "total" : 0,
+        "url":params['url']
+    }
+
+    total = int( params['total'] )
+    page_size = int( params['page_size'] )
+    page = int( params['page'] )
+    display = int( params['display'] )
+    total_pages = int( math.ceil( total / page_size ) )
+    total_pages = total_pages if total_pages > 0 else 1
+    if page <= 1:
+        ret['is_prev'] = 0
+
+    if page >= total_pages:
+        ret['is_next'] = 0
+
+    semi = int( math.ceil( display / 2 ) )
+
+    if page - semi > 0 :
+        ret['from'] = page - semi
+    else:
+        ret['from'] = 1
+
+    if page + semi <= total_pages :
+        ret['end'] = page + semi
+    else:
+        ret['end'] = total_pages
+
+    ret['current'] = page
+    ret['total_pages'] = total_pages
+    ret['page_size'] = page_size
+    ret['total'] = total
+    ret['range'] = range( ret['from'],ret['end'] + 1 )
+    return ret
+
+'''
+统一渲染方法
+'''
+def ops_render( template,context = {} ):
+    if 'current_user' in g:
+        context['current_user'] = g.current_user
+    return render_template( template,**context )
+
+'''
+获取当前时间
+'''
+def getCurrentDate( format = "%Y-%m-%d %H:%M:%S"):
+    #return datetime.datetime.now().strftime( format )
+    return datetime.datetime.now()
+
+'''
+获取格式化的时间
+'''
+def getFormatDate( date = None ,format = "%Y-%m-%d %H:%M:%S" ):
+    if date is None:
+        date = datetime.datetime.now()
+
+    return date.strftime( format )
+
+
+'''
+根据某个字段获取一个dic出来
+'''
+def getDictFilterField( db_model,select_filed,key_field,id_list ):
+    ret = {}
+    query = db_model.query
+    if id_list and len( id_list ) > 0:
+        query = query.filter( select_filed.in_( id_list ) )
+
+    list = query.all()
+    if not list:
+        return ret
+    for item in list:
+        if not hasattr( item,key_field ):
+            break
+
+        ret[ getattr( item,key_field ) ] = item
+    return ret
+
+
+
+def selectFilterObj( obj,field ):
+    ret = []
+    for item in obj:
+        if not hasattr(item, field ):
+            break
+        if getattr( item,field )  in ret:
+            continue
+        ret.append( getattr( item,field ) )
+    return ret
+
+
+def getDictListFilterField( db_model,select_filed,key_field,id_list ):
+    ret = {}
+    query = db_model.query
+    if id_list and len( id_list ) > 0:
+        query = query.filter( select_filed.in_( id_list ) )
+
+    list = query.all()
+    if not list:
+        return ret
+    for item in list:
+        if not hasattr( item,key_field ):
+            break
+        if getattr( item,key_field ) not in ret:
+            ret[getattr(item, key_field)] = []
+
+        ret[ getattr( item,key_field ) ].append(item )
+    return ret
\ No newline at end of file
Index: common/libs/UrlManager.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/libs/UrlManager.py b/common/libs/UrlManager.py
new file mode 100644
--- /dev/null	
+++ b/common/libs/UrlManager.py	
@@ -0,0 +1,23 @@
+# -*- coding: utf-8 -*-
+import time
+from application import  app
+class UrlManager(object):
+    def __init__(self):
+        pass
+
+    @staticmethod
+    def buildUrl( path ):
+        return path
+
+    @staticmethod
+    def buildStaticUrl(path):
+        release_version = app.config.get( 'RELEASE_VERSION' )
+        ver = "%s"%( int( time.time() ) ) if not release_version else release_version
+        path =  "/static" + path + "?ver=" + ver
+        return UrlManager.buildUrl( path )
+
+    @staticmethod
+    def buildImageUrl( path ):
+        app_config = app.config['APP']
+        url = app_config['domain'] + app.config['UPLOAD']['prefix_url'] + path
+        return url
\ No newline at end of file
Index: backend/controllers/finance/Finance.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/controllers/finance/Finance.py b/backend/controllers/finance/Finance.py
new file mode 100644
--- /dev/null	
+++ b/backend/controllers/finance/Finance.py	
@@ -0,0 +1,96 @@
+from flask import Blueprint, request, jsonify, make_response, g, redirect
+from Models.OrderData.OrderBase import Order
+from common.libs.Helper import *
+from common.libs.UrlManager import UrlManager
+import json
+from application import app, db
+
+route_finance = Blueprint('finance_page', __name__)
+
+
+# 财务管理页面
+@route_finance.route("/index")
+def index():
+    resp_data = {}
+    req = request.values
+    page = int(req['p']) if ('p' in req and req['p']) else 1
+
+    query = Order.query
+    page_params = {
+        'total': query.count(),
+        'page_size': app.config['PAGE_SIZE'],
+        'page': page,
+        'display': app.config['PAGE_DISPLAY'],
+        'url': request.full_path.replace("&p={}".format(page), "")
+    }
+    # 分页操作
+    pages = iPagination(page_params)
+    offset = (page - 1) * app.config['PAGE_SIZE']
+    pay_list = query.order_by(Order.id.desc()).offset(offset).limit(app.config['PAGE_SIZE']).all()
+    data_list = []
+
+    for item in pay_list:
+        tmp_data = {
+            "order_id": item.OrderID,
+            "order_status": item.OrderStatus,
+            "order_price": item.Price,
+            "order_dish":item.Disehes
+        }
+        data_list.append(tmp_data)
+
+    resp_data['list'] = data_list
+    resp_data['pages'] = pages
+    resp_data['search_con'] = req
+    resp_data['pay_status_mapping'] = app.config['PAY_STATUS_MAPPING']
+    resp_data['current'] = 'index'
+
+    return ops_render("finance/index.html", resp_data)
+
+
+# 订单详情
+@route_finance.route("/pay-info")
+def info():
+    resp_data = {}
+    req = request.values
+    id = int(req['id']) if 'id' in req else 0
+
+    reback_url = UrlManager.buildUrl("/finance/index")
+    query = Order.query
+
+    if id < 1:
+        return redirect(reback_url)
+
+    pay_order_info = query.filter_by(id=id).first()
+    if not pay_order_info:
+        return redirect(reback_url)
+
+    address_info = {}
+    if pay_order_info.OrderAddress:
+        address_info = json.loads(pay_order_info.OrderAddress)
+
+    resp_data['pay_order_info'] = pay_order_info
+    resp_data['address_info'] = address_info
+    resp_data['current'] = 'index'
+    return ops_render("finance/pay_info.html", resp_data)
+
+
+# 点击确认发货按钮，将订单状态改为“待收货”
+@route_finance.route("/ops", methods=["POST"])
+def orderOps():
+    resp = {'code': 200, 'msg': '操作成功~', 'data': {}}
+    req = request.values
+    id = req['id'] if 'id' in req else 0
+    act = req['act'] if 'act' in req else ''
+    pay_order_info = Order.query.filter_by(id=id).first()
+    if not pay_order_info:
+        resp['code'] = -1
+        resp['msg'] = "系统繁忙。请稍后再试~~"
+        return jsonify(resp)
+
+    if act == "express":
+        pay_order_info.OrderStatus = "待收货"
+        db.session.add(pay_order_info)
+        db.session.commit()
+
+    return jsonify(resp)
+
diff --git a/backend/controllers/user/__init__.py b/backend/controllers/user/__init__.py
new file mode 100644
diff --git a/backend/controllers/food/__init__.py b/backend/controllers/food/__init__.py
new file mode 100644
diff --git a/backend/controllers/finance/__init__.py b/backend/controllers/finance/__init__.py
new file mode 100644
diff --git a/backend/controllers/stat/__init__.py b/backend/controllers/stat/__init__.py
new file mode 100644
diff --git a/backend/controllers/api/__init__.py b/backend/controllers/api/__init__.py
new file mode 100644
diff --git a/backend/controllers/upload/__init__.py b/backend/controllers/upload/__init__.py
new file mode 100644
diff --git a/backend/chart.py b/backend/chart.py
new file mode 100644
diff --git a/common/__init__.py b/common/__init__.py
new file mode 100644
diff --git a/common/libs/__init__.py b/common/libs/__init__.py
new file mode 100644
diff --git a/config/base_setting.py b/config/base_setting.py
new file mode 100644
diff --git a/config/__init__.py b/config/__init__.py
new file mode 100644
diff --git a/config/local_setting.py b/config/local_setting.py
new file mode 100644
diff --git a/config/production_setting.py b/config/production_setting.py
new file mode 100644
